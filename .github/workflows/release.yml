name: Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Name of the tag to create release for'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name : Add tag check flag to github output
        uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: ${{ inputs.tag_name }}

      - name: Tag Check
        run: |
          if ${{ steps.checkTag.outputs.exists }} ; then
            echo "Version valid. Continue ...."
          else
            echo "Please enter a valid tag/version"
            exit 1
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.tag_name }}
          release_name: Release ${{ inputs.tag_name }}
          draft: false
          prerelease: false

      - run: |
          echo ${{ steps.create_release.outputs.upload_url }}

#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./site-info-svc-1.0.13-get-retailer.zip
#          asset_name: site-info-svc-1.0.13-get-retailer.zip
#          asset_content_type: application/zip

      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: path/to/my/assets